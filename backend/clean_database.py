# backend/clean_database.py

import asyncio
import sqlalchemy as sa
from app.database import engine


async def clean_database():
    """–ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å —Å—Ö–µ–º—ã public –≤ PostgreSQL"""

    print("üß® –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã public –∏ –≤—Å–µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ...")

    async with engine.begin() as conn:
        # –û—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ç–µ–∫—É—â–µ–π –±–∞–∑–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –ë–î –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
        # await conn.execute(sa.text("SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = current_database() AND pid <> pg_backend_pid()"))

        # –£–¥–∞–ª–∏—Ç—å —Å—Ö–µ–º—É —Å–æ –≤—Å–µ–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
        await conn.execute(sa.text("DROP SCHEMA public CASCADE"))

        # –í–æ—Å—Å–æ–∑–¥–∞—Ç—å —Å—Ö–µ–º—É
        await conn.execute(sa.text("CREATE SCHEMA public"))

        # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        await conn.execute(sa.text("GRANT ALL ON SCHEMA public TO postgres"))
        await conn.execute(sa.text("GRANT ALL ON SCHEMA public TO public"))

    print("‚úÖ –°—Ö–µ–º–∞ –æ—á–∏—â–µ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é!")


if __name__ == "__main__":
    asyncio.run(clean_database())
