"""Initial migration with all tables

Revision ID: e625379c6f99
Revises: 
Create Date: 2025-07-03 14:39:10.589328

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e625379c6f99'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backup_history',
    sa.Column('backup_type', sa.String(length=50), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('backup_schedule',
    sa.Column('backup_type', sa.String(length=50), nullable=False),
    sa.Column('schedule_cron', sa.String(length=100), nullable=False),
    sa.Column('retention_days', sa.Integer(), nullable=True),
    sa.Column('storage_path', sa.Text(), nullable=True),
    sa.Column('last_backup_time', sa.DateTime(), nullable=True),
    sa.Column('next_backup_time', sa.DateTime(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('business_metrics',
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cache_settings',
    sa.Column('cache_key', sa.String(length=255), nullable=False),
    sa.Column('cache_type', sa.String(length=50), nullable=False),
    sa.Column('ttl_seconds', sa.Integer(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cache_key')
    )
    op.create_table('performance_metrics',
    sa.Column('server_id', sa.String(length=255), nullable=False),
    sa.Column('metric_type', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('measurement_time', sa.DateTime(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiles',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=False),
    sa.Column('cookies', sa.JSON(), nullable=True),
    sa.Column('fingerprint', sa.JSON(), nullable=True),
    sa.Column('browser_settings', sa.JSON(), nullable=True),
    sa.Column('proxy_config', sa.JSON(), nullable=True),
    sa.Column('is_warmed_up', sa.Boolean(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('warmup_sites_visited', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('total_usage_count', sa.Integer(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('regions',
    sa.Column('region_code', sa.String(length=10), nullable=False),
    sa.Column('region_name', sa.String(length=255), nullable=False),
    sa.Column('country_code', sa.String(length=5), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('region_code')
    )
    op.create_table('server_configs',
    sa.Column('server_id', sa.String(length=255), nullable=False),
    sa.Column('hostname', sa.String(length=255), nullable=False),
    sa.Column('warm_profiles_target', sa.Integer(), nullable=True),
    sa.Column('max_cpu_cores', sa.Integer(), nullable=True),
    sa.Column('max_cpu_percent', sa.Integer(), nullable=True),
    sa.Column('max_ram_percent', sa.Integer(), nullable=True),
    sa.Column('spawn_queue_threshold', sa.Integer(), nullable=True),
    sa.Column('spawn_check_interval', sa.Integer(), nullable=True),
    sa.Column('max_concurrent_workers', sa.Integer(), nullable=True),
    sa.Column('profile_health_check_interval', sa.Integer(), nullable=True),
    sa.Column('auto_scaling_enabled', sa.Boolean(), nullable=True),
    sa.Column('auto_worker_spawn', sa.Boolean(), nullable=True),
    sa.Column('current_workers_count', sa.Integer(), nullable=True),
    sa.Column('max_workers_limit', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('server_id')
    )
    op.create_table('tariff_plans',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('cost_per_check', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('min_monthly_topup', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('server_binding_allowed', sa.Boolean(), nullable=True),
    sa.Column('priority_level', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_analytics',
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('task_type', sa.String(length=50), nullable=False),
    sa.Column('total_created', sa.Integer(), nullable=True),
    sa.Column('total_completed', sa.Integer(), nullable=True),
    sa.Column('total_failed', sa.Integer(), nullable=True),
    sa.Column('avg_execution_time', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('server_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('subscription_plan', sa.String(length=50), nullable=True),
    sa.Column('api_key', sa.String(length=255), nullable=True),
    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_api_key'), 'users', ['api_key'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('worker_nodes',
    sa.Column('node_id', sa.String(length=255), nullable=False),
    sa.Column('hostname', sa.String(length=255), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('max_workers', sa.Integer(), nullable=True),
    sa.Column('last_heartbeat', sa.DateTime(), nullable=True),
    sa.Column('capabilities', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('node_id')
    )
    op.create_table('audit_trail',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('admin_id', sa.UUID(), nullable=True),
    sa.Column('action_type', sa.String(length=100), nullable=False),
    sa.Column('table_name', sa.String(length=100), nullable=True),
    sa.Column('record_id', sa.UUID(), nullable=True),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('balance_transactions',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('admin_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('config_changes_log',
    sa.Column('config_level', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('config_key', sa.String(length=255), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('changed_by_user_id', sa.UUID(), nullable=True),
    sa.Column('changed_by_admin_id', sa.UUID(), nullable=True),
    sa.Column('changed_at', sa.DateTime(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['changed_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('financial_transactions_log',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('transaction_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('balance_before', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('balance_after', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('operation_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('admin_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_fingerprints',
    sa.Column('profile_id', sa.UUID(), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=False),
    sa.Column('screen_resolution', sa.String(length=20), nullable=True),
    sa.Column('viewport_size', sa.String(length=20), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('platform', sa.String(length=50), nullable=True),
    sa.Column('canvas_fingerprint', sa.Text(), nullable=True),
    sa.Column('webgl_fingerprint', sa.Text(), nullable=True),
    sa.Column('audio_fingerprint', sa.Text(), nullable=True),
    sa.Column('fonts_hash', sa.Text(), nullable=True),
    sa.Column('cpu_cores', sa.Integer(), nullable=True),
    sa.Column('memory_size', sa.Integer(), nullable=True),
    sa.Column('color_depth', sa.Integer(), nullable=True),
    sa.Column('pixel_ratio', sa.Float(), nullable=True),
    sa.Column('webdriver_present', sa.Boolean(), nullable=True),
    sa.Column('automation_detected', sa.Boolean(), nullable=True),
    sa.Column('connection_type', sa.String(length=20), nullable=True),
    sa.Column('webrtc_ips', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profile_id')
    )
    op.create_table('system_configs',
    sa.Column('config_key', sa.String(length=255), nullable=False),
    sa.Column('config_value', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('config_key')
    )
    op.create_table('system_logs',
    sa.Column('level', sa.String(length=20), nullable=False),
    sa.Column('component', sa.String(length=100), nullable=False),
    sa.Column('server_id', sa.String(length=255), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('task_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('profile_id', sa.UUID(), nullable=True),
    sa.Column('worker_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_activity_stats',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('checks_count', sa.Integer(), nullable=True),
    sa.Column('domains_count', sa.Integer(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('total_spent', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('registration_source', sa.String(length=100), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_balance',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('current_balance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('reserved_balance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('last_topup_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('last_topup_date', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_domains',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_server_preferences',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('preferred_server_id', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parse_results',
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('keyword', sa.String(length=500), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('snippet', sa.Text(), nullable=True),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('parsed_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parsing_analytics',
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('domain_id', sa.UUID(), nullable=False),
    sa.Column('successful_checks', sa.Integer(), nullable=True),
    sa.Column('failed_checks', sa.Integer(), nullable=True),
    sa.Column('total_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('avg_position', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('regions_count', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['domain_id'], ['user_domains.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_lifecycle',
    sa.Column('profile_id', sa.UUID(), nullable=False),
    sa.Column('domain_id', sa.UUID(), nullable=True),
    sa.Column('current_usage_count', sa.Integer(), nullable=True),
    sa.Column('cascade_stage', sa.Integer(), nullable=True),
    sa.Column('is_corrupted', sa.Boolean(), nullable=True),
    sa.Column('corruption_reason', sa.Text(), nullable=True),
    sa.Column('last_health_check', sa.DateTime(), nullable=True),
    sa.Column('next_health_check', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['domain_id'], ['user_domains.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_domain_settings',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('domain_id', sa.UUID(), nullable=False),
    sa.Column('region_id', sa.UUID(), nullable=False),
    sa.Column('profile_cascade_enabled', sa.Boolean(), nullable=True),
    sa.Column('cascade_warmup_sites_count', sa.Integer(), nullable=True),
    sa.Column('delete_profile_after_cascade', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['domain_id'], ['user_domains.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_keywords',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('domain_id', sa.UUID(), nullable=False),
    sa.Column('keyword', sa.String(length=500), nullable=False),
    sa.Column('region_id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('check_frequency', sa.String(length=20), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['domain_id'], ['user_domains.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('position_history',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('domain_id', sa.UUID(), nullable=False),
    sa.Column('keyword_id', sa.UUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('check_date', sa.DateTime(), nullable=True),
    sa.Column('serp_features', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['domain_id'], ['user_domains.id'], ),
    sa.ForeignKeyConstraint(['keyword_id'], ['user_keywords.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('position_history')
    op.drop_table('user_keywords')
    op.drop_table('user_domain_settings')
    op.drop_table('profile_lifecycle')
    op.drop_table('parsing_analytics')
    op.drop_table('parse_results')
    op.drop_table('user_server_preferences')
    op.drop_table('user_domains')
    op.drop_table('user_balance')
    op.drop_table('user_activity_stats')
    op.drop_table('tasks')
    op.drop_table('system_logs')
    op.drop_table('system_configs')
    op.drop_table('profile_fingerprints')
    op.drop_table('financial_transactions_log')
    op.drop_table('config_changes_log')
    op.drop_table('balance_transactions')
    op.drop_table('audit_trail')
    op.drop_table('worker_nodes')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_api_key'), table_name='users')
    op.drop_table('users')
    op.drop_table('task_analytics')
    op.drop_table('tariff_plans')
    op.drop_table('server_configs')
    op.drop_table('regions')
    op.drop_table('profiles')
    op.drop_table('performance_metrics')
    op.drop_table('cache_settings')
    op.drop_table('business_metrics')
    op.drop_table('backup_schedule')
    op.drop_table('backup_history')
    # ### end Alembic commands ###
