import asyncio
from sqlalchemy import select, update
from app.database import async_session_maker
from app.models import User, UserBalance, BalanceTransaction
from decimal import Decimal


async def add_balance_to_user():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    async with async_session_maker() as session:
        email = "oracleh2@gmail.com"
        amount = Decimal("10000.00")

        print(f"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {email}")

        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        result = await session.execute(
            select(User).where(User.email == email)
        )
        user = result.scalar_one_or_none()

        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email {email} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ —Ç–∞–±–ª–∏—Ü–µ users
        user.balance = amount

        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ —Ç–∞–±–ª–∏—Ü–µ user_balance
        balance_result = await session.execute(
            select(UserBalance).where(UserBalance.user_id == user.id)
        )
        user_balance = balance_result.scalar_one_or_none()

        if user_balance:
            user_balance.current_balance = amount
            user_balance.last_topup_amount = amount
            user_balance.last_topup_date = user.updated_at

        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
        transaction = BalanceTransaction(
            user_id=user.id,
            amount=amount,
            type="topup",
            description="–ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        )

        session.add(transaction)
        await session.commit()

        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {amount} —Ä—É–±.")

        print(f"\nüéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print(f"Email: {email}")
        print(f"Password: 12312344")
        print(f"API Key: {user.api_key}")
        print(f"–ë–∞–ª–∞–Ω—Å: {amount} —Ä—É–±.")


if __name__ == "__main__":
    asyncio.run(add_balance_to_user())