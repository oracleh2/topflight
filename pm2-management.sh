#!/bin/bash
# pm2-management.sh

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ë–∞–∑–æ–≤—ã–µ –ø—É—Ç–∏
BACKEND_DIR="/var/www/topflight/backend"
LOGS_DIR="/var/www/topflight/logs"
ECOSYSTEM_FILE="/var/www/topflight/ecosystem.config.js"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤
create_logs_dir() {
    echo -e "${BLUE}üóÇÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤...${NC}"

    if [ ! -d "$LOGS_DIR" ]; then
        mkdir -p "$LOGS_DIR"
        echo -e "${GREEN}‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω–∞: $LOGS_DIR${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $LOGS_DIR${NC}"
    fi

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    chmod 755 "$LOGS_DIR"

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç (—Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º backend-)
    touch "$LOGS_DIR/backend-api.log"
    touch "$LOGS_DIR/backend-api-out.log"
    touch "$LOGS_DIR/backend-api-error.log"
    touch "$LOGS_DIR/backend-worker.log"
    touch "$LOGS_DIR/backend-worker-out.log"
    touch "$LOGS_DIR/backend-worker-error.log"
    touch "$LOGS_DIR/backend-monitor.log"
    touch "$LOGS_DIR/backend-monitor-out.log"
    touch "$LOGS_DIR/backend-monitor-error.log"

    echo -e "${GREEN}‚úÖ –§–∞–π–ª—ã –ª–æ–≥–æ–≤ Backend –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ API
start_api() {
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ Yandex Parser API...${NC}"

    cd "$BACKEND_DIR" || exit 1

    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -d "venv" ]; then
        source venv/bin/activate
        echo -e "${GREEN}‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ${NC}"
    fi

    # –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ PM2
    pm2 start "$ECOSYSTEM_FILE" --only yandex-parser-api

    echo -e "${GREEN}‚úÖ API –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:${NC}"
    pm2 status
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ Worker
start_worker() {
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ Yandex Parser Worker...${NC}"

    cd "$BACKEND_DIR" || exit 1

    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -d "venv" ]; then
        source venv/bin/activate
        echo -e "${GREEN}‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ${NC}"
    fi

    # –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ PM2
    pm2 start "$ECOSYSTEM_FILE" --only yandex-parser-worker

    echo -e "${GREEN}‚úÖ Worker –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:${NC}"
    pm2 status
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ Monitor
start_monitor() {
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ Yandex Parser Monitor...${NC}"

    cd "$BACKEND_DIR" || exit 1

    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -d "venv" ]; then
        source venv/bin/activate
        echo -e "${GREEN}‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ${NC}"
    fi

    # –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ PM2
    pm2 start "$ECOSYSTEM_FILE" --only yandex-parser-monitor

    echo -e "${GREEN}‚úÖ Monitor –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:${NC}"
    pm2 status
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
start_all() {
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö Backend —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"

    cd "$BACKEND_DIR" || exit 1

    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -d "venv" ]; then
        source venv/bin/activate
        echo -e "${GREEN}‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ${NC}"
    fi

    # –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ PM2
    pm2 start "$ECOSYSTEM_FILE"

    echo -e "${GREEN}‚úÖ –í—Å–µ Backend —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!${NC}"
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:${NC}"
    pm2 status
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ API
stop_api() {
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Yandex Parser API...${NC}"
    pm2 stop yandex-parser-api
    echo -e "${GREEN}‚úÖ API –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Worker
stop_worker() {
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Yandex Parser Worker...${NC}"
    pm2 stop yandex-parser-worker
    echo -e "${GREEN}‚úÖ Worker –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Monitor
stop_monitor() {
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Yandex Parser Monitor...${NC}"
    pm2 stop yandex-parser-monitor
    echo -e "${GREEN}‚úÖ Monitor –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
stop_all() {
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö Backend —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    pm2 stop yandex-parser-api yandex-parser-worker yandex-parser-monitor
    echo -e "${GREEN}‚úÖ –í—Å–µ Backend —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ API
restart_api() {
    echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Yandex Parser API...${NC}"
    pm2 restart yandex-parser-api
    echo -e "${GREEN}‚úÖ API –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Worker
restart_worker() {
    echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Yandex Parser Worker...${NC}"
    pm2 restart yandex-parser-worker
    echo -e "${GREEN}‚úÖ Worker –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Monitor
restart_monitor() {
    echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Yandex Parser Monitor...${NC}"
    pm2 restart yandex-parser-monitor
    echo -e "${GREEN}‚úÖ Monitor –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
restart_all() {
    echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö Backend —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    pm2 restart yandex-parser-api yandex-parser-worker yandex-parser-monitor
    echo -e "${GREEN}‚úÖ –í—Å–µ Backend —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ª–æ–≥–∞ (—Å —É—á–µ—Ç–æ–º —Ä–æ—Ç–∞—Ü–∏–∏ PM2)
find_log_file() {
    local base_name="$1"

    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –±–µ–∑ —Å—É—Ñ—Ñ–∏–∫—Å–∞
    if [ -f "$LOGS_DIR/$base_name" ] && [ -s "$LOGS_DIR/$base_name" ]; then
        echo "$LOGS_DIR/$base_name"
        return 0
    fi

    # –ó–∞—Ç–µ–º –∏—â–µ–º —Ñ–∞–π–ª—ã —Å —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏ -0, -1, -2, etc.
    for i in {0..9}; do
        local file_with_suffix="$LOGS_DIR/${base_name%%.log}-${i}.log"
        if [ -f "$file_with_suffix" ]; then
            echo "$file_with_suffix"
            return 0
        fi
    done

    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤–æ–µ –∏–º—è
    echo "$LOGS_DIR/$base_name"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
show_logs() {
    local actual_file
    case "$1" in
        "api")
            actual_file=$(find_log_file "backend-api.log")
            echo -e "${BLUE}üìã –õ–æ–≥–∏ API (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -50 "$actual_file" 2>/dev/null || echo -e "${RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π${NC}"
            ;;
        "api-out")
            actual_file=$(find_log_file "backend-api-out.log")
            echo -e "${BLUE}üìã Stdout –ª–æ–≥–∏ API (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -50 "$actual_file" 2>/dev/null || echo -e "${RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π${NC}"
            ;;
        "api-error")
            actual_file=$(find_log_file "backend-api-error.log")
            echo -e "${RED}üö® Error –ª–æ–≥–∏ API (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -50 "$actual_file" 2>/dev/null || echo -e "${RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π${NC}"
            ;;
        "worker")
            actual_file=$(find_log_file "backend-worker.log")
            echo -e "${BLUE}üìã –õ–æ–≥–∏ Worker (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -50 "$actual_file" 2>/dev/null || echo -e "${RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π${NC}"
            ;;
        "worker-out")
            actual_file=$(find_log_file "backend-worker-out.log")
            echo -e "${BLUE}üìã Stdout –ª–æ–≥–∏ Worker (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -50 "$actual_file" 2>/dev/null || echo -e "${RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π${NC}"
            ;;
        "worker-error")
            actual_file=$(find_log_file "backend-worker-error.log")
            echo -e "${RED}üö® Error –ª–æ–≥–∏ Worker (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -50 "$actual_file" 2>/dev/null || echo -e "${RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π${NC}"
            ;;
        "monitor")
            actual_file=$(find_log_file "backend-monitor.log")
            echo -e "${BLUE}üìã –õ–æ–≥–∏ Monitor (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -50 "$actual_file" 2>/dev/null || echo -e "${RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π${NC}"
            ;;
        "monitor-out")
            actual_file=$(find_log_file "backend-monitor-out.log")
            echo -e "${BLUE}üìã Stdout –ª–æ–≥–∏ Monitor (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -50 "$actual_file" 2>/dev/null || echo -e "${RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π${NC}"
            ;;
        "monitor-error")
            actual_file=$(find_log_file "backend-monitor-error.log")
            echo -e "${RED}üö® Error –ª–æ–≥–∏ Monitor (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -50 "$actual_file" 2>/dev/null || echo -e "${RED}‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π${NC}"
            ;;
        "all")
            echo -e "${BLUE}üìã –í—Å–µ –ª–æ–≥–∏ Backend:${NC}"
            echo -e "${GREEN}--- API STDOUT ---${NC}"
            actual_file=$(find_log_file "backend-api-out.log")
            echo -e "${PURPLE}$(basename "$actual_file")${NC}"
            tail -20 "$actual_file" 2>/dev/null || echo "–§–∞–π–ª –ø—É—Å—Ç–æ–π"
            echo -e "${RED}--- API STDERR ---${NC}"
            actual_file=$(find_log_file "backend-api-error.log")
            echo -e "${PURPLE}$(basename "$actual_file")${NC}"
            tail -20 "$actual_file" 2>/dev/null || echo "–§–∞–π–ª –ø—É—Å—Ç–æ–π"
            echo -e "${BLUE}--- API COMBINED ---${NC}"
            actual_file=$(find_log_file "backend-api.log")
            echo -e "${PURPLE}$(basename "$actual_file")${NC}"
            tail -20 "$actual_file" 2>/dev/null || echo "–§–∞–π–ª –ø—É—Å—Ç–æ–π"
            ;;
        "errors")
            echo -e "${RED}üö® –í—Å–µ –æ—à–∏–±–∫–∏ Backend:${NC}"
            echo -e "${YELLOW}--- API ERRORS ---${NC}"
            actual_file=$(find_log_file "backend-api-error.log")
            echo -e "${PURPLE}$(basename "$actual_file")${NC}"
            tail -20 "$actual_file" 2>/dev/null || echo "–§–∞–π–ª –ø—É—Å—Ç–æ–π"
            echo -e "${YELLOW}--- WORKER ERRORS ---${NC}"
            actual_file=$(find_log_file "backend-worker-error.log")
            echo -e "${PURPLE}$(basename "$actual_file")${NC}"
            tail -20 "$actual_file" 2>/dev/null || echo "–§–∞–π–ª –ø—É—Å—Ç–æ–π"
            echo -e "${YELLOW}--- MONITOR ERRORS ---${NC}"
            actual_file=$(find_log_file "backend-monitor-error.log")
            echo -e "${PURPLE}$(basename "$actual_file")${NC}"
            tail -20 "$actual_file" 2>/dev/null || echo "–§–∞–π–ª –ø—É—Å—Ç–æ–π"
            ;;
        *)
            echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–≥–∏: api, api-out, api-error, worker, worker-out, worker-error, monitor, monitor-out, monitor-error, all, errors${NC}"
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
follow_logs() {
    local actual_file
    case "$1" in
        "api")
            actual_file=$(find_log_file "backend-api.log")
            echo -e "${BLUE}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ API –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏...${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -f "$actual_file"
            ;;
        "api-out")
            actual_file=$(find_log_file "backend-api-out.log")
            echo -e "${BLUE}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ stdout –ª–æ–≥–æ–≤ API...${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -f "$actual_file"
            ;;
        "api-error")
            actual_file=$(find_log_file "backend-api-error.log")
            echo -e "${RED}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ error –ª–æ–≥–æ–≤ API...${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -f "$actual_file"
            ;;
        "worker")
            actual_file=$(find_log_file "backend-worker.log")
            echo -e "${BLUE}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ Worker...${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -f "$actual_file"
            ;;
        "worker-error")
            actual_file=$(find_log_file "backend-worker-error.log")
            echo -e "${RED}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ error –ª–æ–≥–æ–≤ Worker...${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -f "$actual_file"
            ;;
        "monitor")
            actual_file=$(find_log_file "backend-monitor.log")
            echo -e "${BLUE}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ Monitor...${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -f "$actual_file"
            ;;
        "monitor-error")
            actual_file=$(find_log_file "backend-monitor-error.log")
            echo -e "${RED}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ error –ª–æ–≥–æ–≤ Monitor...${NC}"
            echo -e "${PURPLE}–§–∞–π–ª: $(basename "$actual_file")${NC}"
            tail -f "$actual_file"
            ;;
        "all")
            echo -e "${BLUE}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö Backend –ª–æ–≥–æ–≤...${NC}"
            # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
            local api_file=$(find_log_file "backend-api.log")
            local api_out_file=$(find_log_file "backend-api-out.log")
            local api_error_file=$(find_log_file "backend-api-error.log")
            echo -e "${PURPLE}–§–∞–π–ª—ã: $(basename "$api_file"), $(basename "$api_out_file"), $(basename "$api_error_file")${NC}"
            tail -f "$api_file" "$api_out_file" "$api_error_file"
            ;;
        "errors")
            echo -e "${RED}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö error –ª–æ–≥–æ–≤ Backend...${NC}"
            # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ error —Ñ–∞–π–ª—ã
            local api_error_file=$(find_log_file "backend-api-error.log")
            local worker_error_file=$(find_log_file "backend-worker-error.log")
            local monitor_error_file=$(find_log_file "backend-monitor-error.log")
            echo -e "${PURPLE}–§–∞–π–ª—ã: $(basename "$api_error_file"), $(basename "$worker_error_file"), $(basename "$monitor_error_file")${NC}"
            tail -f "$api_error_file" "$worker_error_file" "$monitor_error_file"
            ;;
        *)
            echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: api, api-out, api-error, worker, worker-error, monitor, monitor-error, all, errors${NC}"
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤
clear_logs() {
    echo -e "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ Backend –ª–æ–≥–æ–≤...${NC}"

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∞—Ä—Ö–∏–≤–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    mkdir -p "/var/www/topflight/logs_archives"

    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤
    ARCHIVE_NAME="backend_logs_backup_$(date +%Y%m%d_%H%M%S).tar.gz"
    cd "/var/www/topflight" || exit 1
    tar -czf "logs_archives/$ARCHIVE_NAME" logs/backend-*.log

    # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ª–æ–≥–∏
    > "$LOGS_DIR/backend-api.log"
    > "$LOGS_DIR/backend-api-out.log"
    > "$LOGS_DIR/backend-api-error.log"
    > "$LOGS_DIR/backend-worker.log"
    > "$LOGS_DIR/backend-worker-out.log"
    > "$LOGS_DIR/backend-worker-error.log"
    > "$LOGS_DIR/backend-monitor.log"
    > "$LOGS_DIR/backend-monitor-out.log"
    > "$LOGS_DIR/backend-monitor-error.log"

    echo -e "${GREEN}‚úÖ Backend –ª–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã, –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $ARCHIVE_NAME${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor() {
    echo -e "${BLUE}üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Backend –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:${NC}"
    pm2 monit
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "$1" in
        "init")
            create_logs_dir
            ;;
        "start")
            case "$2" in
                "api")
                    create_logs_dir
                    start_api
                    ;;
                "worker")
                    create_logs_dir
                    start_worker
                    ;;
                "monitor")
                    create_logs_dir
                    start_monitor
                    ;;
                "all"|"")
                    create_logs_dir
                    start_all
                    ;;
                *)
                    echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å: $2${NC}"
                    echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: api, worker, monitor, all${NC}"
                    ;;
            esac
            ;;
        "stop")
            case "$2" in
                "api")
                    stop_api
                    ;;
                "worker")
                    stop_worker
                    ;;
                "monitor")
                    stop_monitor
                    ;;
                "all"|"")
                    stop_all
                    ;;
                *)
                    echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å: $2${NC}"
                    echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: api, worker, monitor, all${NC}"
                    ;;
            esac
            ;;
        "restart")
            case "$2" in
                "api")
                    restart_api
                    ;;
                "worker")
                    restart_worker
                    ;;
                "monitor")
                    restart_monitor
                    ;;
                "all"|"")
                    restart_all
                    ;;
                *)
                    echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å: $2${NC}"
                    echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: api, worker, monitor, all${NC}"
                    ;;
            esac
            ;;
        "status")
            pm2 status
            ;;
        "logs")
            show_logs "$2"
            ;;
        "follow")
            follow_logs "$2"
            ;;
        "clear-logs")
            clear_logs
            ;;
        "monitor")
            monitor
            ;;
        *)
            echo -e "${BLUE}üîß Yandex Parser Backend Management${NC}"
            echo ""
            echo -e "${GREEN}–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
            echo "  init                    - –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤"
            echo "  start [service]         - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å (api|worker|monitor|all)"
            echo "  stop [service]          - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å (api|worker|monitor|all)"
            echo "  restart [service]       - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å (api|worker|monitor|all)"
            echo "  status                  - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
            echo "  logs [type]             - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
            echo "  follow [type]           - –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
            echo "  clear-logs              - –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ (—Å –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ–º)"
            echo "  monitor                 - –û—Ç–∫—Ä—ã—Ç—å PM2 –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
            echo ""
            echo -e "${YELLOW}–¢–∏–ø—ã –ª–æ–≥–æ–≤:${NC}"
            echo "  api, api-out, api-error, worker, worker-out, worker-error,"
            echo "  monitor, monitor-out, monitor-error, all, errors"
            echo ""
            echo -e "${YELLOW}–ü—Ä–∏–º–µ—Ä—ã:${NC}"
            echo "  ./pm2-management.sh start api"
            echo "  ./pm2-management.sh logs api-error"
            echo "  ./pm2-management.sh follow api-error"
            echo "  ./pm2-management.sh restart all"
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
