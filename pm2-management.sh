#!/bin/bash
# pm2-management.sh

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ë–∞–∑–æ–≤—ã–µ –ø—É—Ç–∏
BACKEND_DIR="/var/www/topflight/backend"
LOGS_DIR="/var/www/topflight/logs"
ECOSYSTEM_FILE="/var/www/topflight/ecosystem.config.js"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤
create_logs_dir() {
    echo -e "${BLUE}üóÇÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤...${NC}"

    if [ ! -d "$LOGS_DIR" ]; then
        mkdir -p "$LOGS_DIR"
        echo -e "${GREEN}‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω–∞: $LOGS_DIR${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $LOGS_DIR${NC}"
    fi

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    chmod 755 "$LOGS_DIR"

    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    touch "$LOGS_DIR/api.log"
    touch "$LOGS_DIR/api-out.log"
    touch "$LOGS_DIR/api-error.log"
    touch "$LOGS_DIR/worker.log"
    touch "$LOGS_DIR/worker-out.log"
    touch "$LOGS_DIR/worker-error.log"
    touch "$LOGS_DIR/monitor.log"
    touch "$LOGS_DIR/monitor-out.log"
    touch "$LOGS_DIR/monitor-error.log"

    echo -e "${GREEN}‚úÖ –§–∞–π–ª—ã –ª–æ–≥–æ–≤ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ API
start_api() {
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ Yandex Parser API...${NC}"

    cd "$BACKEND_DIR" || exit 1

    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -d "venv" ]; then
        source venv/bin/activate
        echo -e "${GREEN}‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ${NC}"
    fi

    # –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ PM2
    pm2 start "$ECOSYSTEM_FILE" --only yandex-parser-api

    echo -e "${GREEN}‚úÖ API –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:${NC}"
    pm2 status
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ API
stop_api() {
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Yandex Parser API...${NC}"
    pm2 stop yandex-parser-api
    echo -e "${GREEN}‚úÖ API –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ API
restart_api() {
    echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Yandex Parser API...${NC}"
    pm2 restart yandex-parser-api
    echo -e "${GREEN}‚úÖ API –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
show_logs() {
    case "$1" in
        "api")
            echo -e "${BLUE}üìã –õ–æ–≥–∏ API (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            tail -50 "$LOGS_DIR/api.log"
            ;;
        "api-out")
            echo -e "${BLUE}üìã Stdout –ª–æ–≥–∏ API (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            tail -50 "$LOGS_DIR/api-out.log"
            ;;
        "api-error")
            echo -e "${RED}üö® Error –ª–æ–≥–∏ API (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫):${NC}"
            tail -50 "$LOGS_DIR/api-error.log"
            ;;
        "all")
            echo -e "${BLUE}üìã –í—Å–µ –ª–æ–≥–∏ API:${NC}"
            echo -e "${GREEN}--- STDOUT ---${NC}"
            tail -20 "$LOGS_DIR/api-out.log"
            echo -e "${RED}--- STDERR ---${NC}"
            tail -20 "$LOGS_DIR/api-error.log"
            echo -e "${BLUE}--- COMBINED ---${NC}"
            tail -20 "$LOGS_DIR/api.log"
            ;;
        *)
            echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–≥–∏: api, api-out, api-error, all${NC}"
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
follow_logs() {
    case "$1" in
        "api")
            echo -e "${BLUE}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ API –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏...${NC}"
            tail -f "$LOGS_DIR/api.log"
            ;;
        "api-out")
            echo -e "${BLUE}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ stdout –ª–æ–≥–æ–≤ API...${NC}"
            tail -f "$LOGS_DIR/api-out.log"
            ;;
        "api-error")
            echo -e "${RED}üì° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ error –ª–æ–≥–æ–≤ API...${NC}"
            tail -f "$LOGS_DIR/api-error.log"
            ;;
        *)
            echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: api, api-out, api-error${NC}"
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤
clear_logs() {
    echo -e "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤...${NC}"

    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤
    ARCHIVE_NAME="logs_backup_$(date +%Y%m%d_%H%M%S).tar.gz"
    cd "$BACKEND_DIR" || exit 1
    tar -czf "logs_archives/$ARCHIVE_NAME" logs/

    # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ª–æ–≥–∏
    > "$LOGS_DIR/backend-api.log"
    > "$LOGS_DIR/backend-api-out.log"
    > "$LOGS_DIR/backend-api-error.log"
    > "$LOGS_DIR/backend-worker.log"
    > "$LOGS_DIR/backend-worker-out.log"
    > "$LOGS_DIR/backend-worker-error.log"
    > "$LOGS_DIR/backend-monitor.log"
    > "$LOGS_DIR/backend-monitor-out.log"
    > "$LOGS_DIR/backend-monitor-error.log"

    echo -e "${GREEN}‚úÖ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã, –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $ARCHIVE_NAME${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor() {
    echo -e "${BLUE}üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:${NC}"
    pm2 monit
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "$1" in
        "init")
            create_logs_dir
            ;;
        "start")
            create_logs_dir
            start_api
            ;;
        "stop")
            stop_api
            ;;
        "restart")
            restart_api
            ;;
        "status")
            pm2 status
            ;;
        "logs")
            show_logs "$2"
            ;;
        "follow")
            follow_logs "$2"
            ;;
        "clear-logs")
            clear_logs
            ;;
        "monitor")
            monitor
            ;;
        *)
            echo -e "${BLUE}üîß Yandex Parser API Management${NC}"
            echo ""
            echo -e "${GREEN}–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
            echo "  init        - –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤"
            echo "  start       - –ó–∞–ø—É—Å—Ç–∏—Ç—å API"
            echo "  stop        - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å API"
            echo "  restart     - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å API"
            echo "  status      - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
            echo "  logs [type] - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (api|api-out|api-error|all)"
            echo "  follow [type] - –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
            echo "  clear-logs  - –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ (—Å –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ–º)"
            echo "  monitor     - –û—Ç–∫—Ä—ã—Ç—å PM2 –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
            echo ""
            echo -e "${YELLOW}–ü—Ä–∏–º–µ—Ä—ã:${NC}"
            echo "  ./pm2-management.sh start"
            echo "  ./pm2-management.sh logs api-error"
            echo "  ./pm2-management.sh follow api"
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
