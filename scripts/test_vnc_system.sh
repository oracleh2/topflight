#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VNC —Å–∏—Å—Ç–µ–º—ã TopFlight
# scripts/test_vnc_system.sh

set -euo pipefail

PROJECT_ROOT="/var/www/topflight"
TEST_LOG="$PROJECT_ROOT/logs/vnc_test.log"

echo "üß™ Testing TopFlight VNC System..."

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_test() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') TEST: $1" | tee -a "$TEST_LOG"
}

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ Xvfb
log_test "Checking Xvfb service..."
if sudo systemctl is-active --quiet xvfb-main; then
    log_test "‚úÖ Xvfb service is running"
else
    log_test "‚ùå Xvfb service is not running"
    exit 1
fi

# –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ DISPLAY
log_test "Testing DISPLAY environment..."
export DISPLAY=:99
if xdpyinfo >/dev/null 2>&1; then
    log_test "‚úÖ DISPLAY :99 is accessible"
else
    log_test "‚ùå DISPLAY :99 is not accessible"
    exit 1
fi

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ API
log_test "Testing API health..."
if curl -f -s "http://localhost:8000/health" >/dev/null; then
    log_test "‚úÖ API is responding"
else
    log_test "‚ùå API is not responding"
    exit 1
fi

# –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ VNC
log_test "Checking VNC port range..."
VNC_PORTS_AVAILABLE=0
for port in {5900..5910}; do
    if ! nc -z localhost "$port" 2>/dev/null; then
        ((VNC_PORTS_AVAILABLE++))
    fi
done

if [ $VNC_PORTS_AVAILABLE -gt 5 ]; then
    log_test "‚úÖ VNC ports available: $VNC_PORTS_AVAILABLE"
else
    log_test "‚ö†Ô∏è Limited VNC ports available: $VNC_PORTS_AVAILABLE"
fi

# –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
log_test "Checking directories..."
REQUIRED_DIRS=(
    "$PROJECT_ROOT/logs"
    "$PROJECT_ROOT/data/vnc"
    "$PROJECT_ROOT/data/vnc_tokens"
)

for dir in "${REQUIRED_DIRS[@]}"; do
    if [ -d "$dir" ] && [ -w "$dir" ]; then
        log_test "‚úÖ Directory accessible: $dir"
    else
        log_test "‚ùå Directory issue: $dir"
        exit 1
    fi
done

# –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
log_test "Checking permissions..."
if [ -x "$PROJECT_ROOT/scripts/start_debug_session.sh" ]; then
    log_test "‚úÖ VNC scripts are executable"
else
    log_test "‚ùå VNC scripts are not executable"
    exit 1
fi

echo ""
log_test "üéâ All VNC system tests passed!"
echo "System is ready for VNC debugging."

